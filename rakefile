ENV_FILE = "fb.env"
DEFAULT_ENV = "dev"

task :default => "help"

task :help do
  system('rake -T')
end

def load_env
  begin
    File.open(ENV_FILE, "r") do |f|
      line = f.gets.strip
      ENV["env_name"] = line == "" ? DEFAULT_ENV : line
    end
  rescue 
    ENV["env_name"] = DEFAULT_ENV
  end
end

def save_env(name)
  File.open(ENV_FILE, "w") do |f|
    f.puts(name)
    ENV["env_name"] = name
  end
end

desc "get or set env config"
task :env, [:env_name] do |t, args|
  if args.env_name.nil?
    load_env    
  else
    save_env args.env_name
  end
  puts "env = #{ENV['env_name']}"
end

desc "create a database"
task :create => :env do
  system "echo create database '#{ENV['env_name']}.fdb' page_size 16384 user 'sysdba' password 'masterkey'; | isql -q"
end

desc "backup a database"
task :backup => :env do
  system %Q{gbak -backup -v "#{ENV['env_name']}.fdb" "#{ENV['env_name']}.fbk"}
end

desc "show info about a database"
task :info => :env do
  system %Q{gstat -h "#{ENV['env_name']}.fdb"}
end

desc "restore a database (no replace)"
task :restore => :env do
  system %Q{gbak -create -v "#{ENV['env_name']}.fbk" "#{ENV['env_name']}.fdb"}
end

desc "replace a database (CAUTION)"
task :replace => :env do
  system %Q{gbak -replace -v "#{ENV['env_name']}.fbk" "#{ENV['env_name']}.fdb"}
end

desc "extract metadata"
task :meta => :env do
  sql = "#{ENV['env_name']}.sql"
  if File.exists? sql
    File.delete sql
  end
  system %Q{isql -x -o "#{sql}" "#{ENV['env_name']}.fdb"}
end